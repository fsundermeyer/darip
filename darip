#!/bin/bash
#
# darip: DVD Audio Ripper for Linux
# Copyright 2017 Frank Sundermeyer
#
# Licensed under the GPL 2.0 or GPL 3.0 at your choice
#
# Inspired by Philippe Gachoud's answer in
# http://askubuntu.com/questions/24326/how-do-i-rip-audio-from-a-dvd

# TODO
#
# 1. Range of tracks to be ripped (1,2,4,5 | 2-12)
# 2. Basic tagging (Artist, Album, Year, Genre, Comment)
# 3. mp3gain

function exit_on_error {
    echo -e "$1"
    exit 1
}

function darip_help {
    cat <<EOF
Usage:
  $ME [OPTIONS] TBD [RANGE]

General Options:
  TBD --gain=(album|track)
  --help
  TBD --nospace=(0|1)
  --outdir=PATH             Path to the output directory. If one or more of
                            artist, albumtitle, and year are specified, the
                            output will go to OUTDIR/ARTIST/YEAR_ALBUM
                            Default: $HOME/Music
  TBD --preset=LAME_PRESET

Tagging Options:
  TBD --artist="ARTIST"
  TBD --album="ALBUMTITLE"
  TBD --comment="COMMENT"
  TBD --genre=GENRE
  TBD --year=YEAR

Expert Options:
  TBD --device
  TBD --seek

EOF
}

trap "exit_on_error '\nCaught SIGTERM/SIGINT'" SIGTERM SIGINT
#trap "cleanup" ERR

# Check if transcode is installed
#
which transcode >/dev/null || exit_on_error "This program requires the package \"transcode\""


# Defaults
#
OUTDIR="$HOME/Music"
DVDDEV="/dev/sr0"
STRIPSPACE=1

TITLE=1
TITLECOUNT=0
CHAPTERCOUNTER=0
CHAPTERID=0
AUDIOTRACK=0
AUDIOPRESET=0
CONT=n

LAME_PRESET="insane"

# check the first XX MB of the DVD
CHECKSIZE=10
#CHECKSIZE=1

declare -a TITLEINFO
declare -a CHAPTERS
declare -a AUDIOINFO

ME=$0

#----------------------------------
# Parsing the command line arguments
#

ARGS=$(getopt -o h -l artist:,album:,comment:,device:,gain:,genre,help,nospace:,outdir:,preset:,seek:,year: -n "$ME" -- "$@")

# Exit when getopt returns errors
#
GETOPT_RETURN_CODE=$?
[[ 0 != $GETOPT_RETURN_CODE ]] && exit $GETOPT_RETURN_CODE

eval set -- "$ARGS"

while true ; do
    case "$1" in
        #--gain)
        #    GAINMETHOD=$2
        ## album or track??
        #    shift 2
        #   ;;
        --album)
            ALBUM="$2"
            shift 2
           ;;
        --artist)
            ARTIST="$2"
            shift 2
           ;;
        --help|-h)
            darip_help
            exit 0
            ;;
        --outdir)
            OUTDIR="$2"
            shift 2
           ;;
        --year)
            YEAR="$2"
            shift 2
            ;;
        --)
            shift
            break
            ;;
        *)
            exit_on_error "Internal error!"
            ;;
    esac
done

# --- Let the fun begin ... -----------------------

#-----
# The output directory
#
[[ -n "$ARTIST" ]] && OUTDIR="$OUTDIR/$ARTIST"
if [[ -n "$YEAR" && -n "$ALBUM" ]]; then
    OUTDIR="$OUTDIR/${YEAR}_$ALBUM"
else
    if [[ -n "$ALBUM" ]]; then
        OUTDIR="$OUTDIR/$ALBUM"
    elif [[ -n "$YEAR" ]]; then
        OUTDIR="$OUTDIR/$YEAR"
    fi
fi

if [[ ! -d "$OUTDIR" ]]; then
    mkdir -p "$OUTDIR" || exit_on_error "Fatal error: Could not create output directory ${OUTDIR}"
fi

echo "Reading DVD information..."

# get number of titles
#
TITLECOUNT=$(tcprobe -i ${DVDDEV} -H ${CHECKSIZE} 2>&1) || exit_on_error "Fatal error: Could not read DVD\n Make sure you have inserted a DVD and libdvdcss2 is installed"
TITLECOUNT=$(cat <<< $TITLECOUNT \
    | sed -n 's/.*DVD title [0-9][0-9]*\/\([^:]*\).*/\1/p')

if [[ 1 -lt $TITLECOUNT ]]; then
    # Get info about each title
    # Remove all lines except the one with DVD title and audio track
    # information
    #
    for (( i=1; i<=${TITLECOUNT}; i++ )); do
        TITLEINFO[$i]=$(tcprobe -i ${DVDDEV} -H ${CHECKSIZE} -T ${i} 2>&1 \
            | grep -E 'DVD title|audio track')
        # Get the amount of chapters for each title
        # We want the preset for the DVD title to be the one with the most
        # chapters $CHAPTERID
        #
        CHAPTERS[$i]=$(echo "${TITLEINFO[$i]}" | head -n1 \
             | sed 's/.*DVD title [0-9][0-9]*\/[^:]*:\s\([0-9][0-9]*\).*/\1/')
        if [[ ${CHAPTERS[$i]} -gt $CHAPTERCOUNTER ]]; then
            CHAPTERCOUNTER=${CHAPTERS[$i]}
            CHAPTERID=$i
        fi

        # We only want to display lines with the titles now
        echo "${TITLEINFO[$i]}" | head -n1 | sed "s/\[[^]]*\]/[${i}]/"
    done

    # User chooses DVD title, preset is CHAPTERID
    #
    while true; do
        read -e -p "Choose a title (1 to ${TITLECOUNT}) [$CHAPTERID]: " TITLE
        [[ -z $TITLE ]] && TITLE=$CHAPTERID
        # loop until we get a valid value
        [[ $TITLE =~ ^-?[0-9]+$ && $TITLE -le $TITLECOUNT ]] && break
    done
else
    TITLEINFO[1]=$(tcprobe -i ${DVDDEV} -H ${CHECKSIZE} -T 1 2>&1 | grep -E 'DVD title|audio track')
    echo "Only one DVD title present, ripping tracks from title ${TITLE}"
fi

echo

# List Audio Tracks and try to choose the correct one
#
AUDIOCOUNT=$(echo "${TITLEINFO[$TITLE]}" | tail -n +2 | wc -l)

if [[ 1 -lt $AUDIOCOUNT ]]; then
    # extract the audioinfo lines from TITLEINFO
    AUDIOINFO=$(echo "${TITLEINFO[$TITLE]}" | tail -n +2 | sed 's/^\s*//g')
    # print the audioinfo lines
    # according to the tcprobe output the line that does _not_ end with
    # (*) is the default audio - probably what we want
    #
    j=0
    while read AI; do
        [[ $AI =~ ^.+\(\*\)$ ]] || AUDIOPRESET="${j}"
        echo "[${j}] ${AI}"
        let j++;
    done <<< "$AUDIOINFO"

    # read the user input
    while true; do
        read -e -p "Choose an audio track [${AUDIOPRESET}]: " AUDIOTRACK
        [[ -z $AUDIOTRACK ]] && AUDIOTRACK=$AUDIOPRESET
        [[ $AUDIOTRACK =~ ^-?[0-9]+$ && $AUDIOTRACK -le $AUDIOCOUNT ]] && break
    done
else
    echo "Only one audio track present, ripping audio track ${AUDIOTRACK}"
fi

echo

echo "DVD title: $TITLE
Chapters: ${CHAPTERS[$TITLE]}
Audio Track: $AUDIOTRACK"

while true; do
        read -e -p "Start ripping ${CHAPTERS[$TITLE]} audio tracks from DVD title $TITLE? [Y/n] " CONT
        [[ -z $CONT ]] && CONT="y"
        if [[ $CONT =~ ^[yY]$ ]]; then
            break
        else
            exit 1
        fi
    done

echo

for (( i=1; i<=${CHAPTERS[$TITLE]}; i++ )); do
    if [[ $i -lt 10 ]]; then
        TRACKNO="0${i}"
    else
        TRACKNO="${i}"
    fi
    transcode -x null,dvd -y null,tcaud -i ${DVDDEV} -T $TITLE,${i},1 \
              -a ${AUDIOTRACK} -E 44100,16,2 --lame_preset ${LAME_PRESET} \
              -m ${OUTDIR}/${TRACKNO}.mp3
done

eject ${DVDDEV}
